name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6 
      - name: Inject client_secret into tfvars
        run: |
          echo 'client_secret = "${{ secrets.AZURE_AD_APP_SECRET }}"' > terraform/terraform.tfvars
    
      - name: Terraform Apply AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }} 
          # ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_APP_SECRET }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: |
          cd terraform
          terraform init
          # terraform apply -auto-approve -var-file="terraform.tfvars"
          terraform destroy -auto-approve

      - name: Generate Ansible Inventory
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          python3 generate_inventory.py
          python3 azure_generate_inventory.py
        

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/devops.pem
          chmod 600 ~/.ssh/devops.pem
          echo -e "Host *\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null" > ~/.ssh/config

      - name: Run Ansible for AWS
        run: |
          ansible-playbook -i ansible/inventory_aws.ini ansible/playbook.yml \
            --private-key ~/.ssh/devops.pem -u ec2-user

      - name: Run Ansible for Azure
        run: ansible-playbook -i ansible/inventory_azure.ini ansible/ubuntu.yml

